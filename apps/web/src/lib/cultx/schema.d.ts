/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/CultxActiveMarkets": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get active wine markets
         * @description Returns a paginated list of active wine markets with trading information
         */
        get: operations["getActiveMarkets"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        WineMarket: {
            /**
             * @description Wine region
             * @example Bordeaux
             */
            region: string;
            /**
             * @description Wine producer/estate name
             * @example Château Lafite Rothschild
             */
            producer: string;
            /**
             * @description Full name of the wine
             * @example Château Lafite Rothschild, Pauillac, 1er Cru Classé
             */
            wineName: string;
            /**
             * @description Vintage year
             * @example 2015
             */
            vintage: number;
            /**
             * @description Number of units in a lot
             * @example 12
             */
            unitCount: number;
            /**
             * @description Size of each unit
             * @example 75cl
             */
            unitSize: string;
            /**
             * @description LWIN18 identifier (unique wine identifier)
             * @example 1014223
             */
            lwin18: string;
            marketValue: number | null;
            /**
             * Format: double
             * @description Wine rating/score
             * @example 97.5
             */
            score?: number | null;
            /**
             * @description Available quantity for trading
             * @example 120
             */
            availableQuantity: number;
            highestBid?: {
                /**
                 * Format: double
                 * @description Highest bid price
                 */
                price: number;
                /** @description Quantity at highest bid */
                quantity: number;
            } | null;
            lowestOffer?: {
                /**
                 * Format: double
                 * @description Lowest offer price
                 */
                price: number;
                /** @description Quantity at lowest offer */
                quantity: number;
                /** @description Order identifier */
                orderId: string;
            } | null;
            /**
             * Format: date-time
             * @description Date and time of last trade
             * @example 2024-01-15T14:30:00Z
             */
            lastTradeDateTime?: string | null;
            /**
             * Format: double
             * @description Price of last trade
             * @example 5200
             */
            lastTradePrice?: number | null;
            /**
             * Format: double
             * @description Spread between bid and offer
             * @example 50
             */
            spread?: number | null;
            /**
             * @description Filename of wine image
             * @example lafite-2015.jpg
             */
            imageFileName?: string | null;
            /**
             * @description Product URN identifier
             * @example urn:product:wine:1014223
             */
            productUrn: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getActiveMarkets: {
        parameters: {
            query: {
                /** @description Page number for pagination (0-indexed) */
                page: number;
                /** @description Number of items per page */
                pageSize: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response with active markets data */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        data: components["schemas"]["WineMarket"][];
                        /**
                         * @description Total number of wine markets available
                         * @example 3522
                         */
                        count: number;
                    };
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
